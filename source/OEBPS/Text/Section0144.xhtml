<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="hevea 1.10" name="GENERATOR" />

  <title>Files</title>
  <link href="../Styles/stylesheet.css" rel="stylesheet" type="text/css" />
  <style type="text/css">
/*<![CDATA[*/

  @page { margin-bottom: 5.000000pt; margin-top: 5.000000pt; }

  span.sgc-1 {font-weight: bold}

  body.sgc-2 {word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;}
  /*]]>*/
  </style>
</head>

<body class="calibre sgc-2">
  <h2 class="section sigilNotInTOC" id="heading_id_7"><a class="calibre14" id="toc157"></a><a class="calibre14" id="htoc173"><span class="calibre18">14.5</span></a><span class="calibre18">&nbsp;&nbsp;Catching exceptions</span></h2>

  <p class="calibre15"><a class="calibre16" id="catch"></a></p>

  <p class="calibre15"><span class="calibre4">A lot of things can go wrong when you try to read and write files. If you try to open a file that doesn’t exist, you get an <tt class="calibre7">IOError</tt>:</span></p>

  <p class="calibre15"><a class="calibre16" id="@default1269"></a> <a class="calibre16" id="@default1270"></a> <a class="calibre16" id="@default1271"></a> <a class="calibre16" id="@default1272"></a></p>
  <pre class="verbatim"><span class="calibre20">&gt;&gt;&gt; fin = open('bad_file')
IOError: [Errno 2] No such file or directory: 'bad_file'
</span></pre>

  <p class="calibre15"><span class="calibre4">If you don’t have permission to access a file:</span></p>

  <p class="calibre15"><a class="calibre16" id="@default1273"></a> <a class="calibre16" id="@default1274"></a></p>
  <pre class="verbatim"><span class="calibre20">&gt;&gt;&gt; fout = open('/etc/passwd', 'w')
IOError: [Errno 13] Permission denied: '/etc/passwd'
</span></pre>

  <p class="calibre15"><span class="calibre4">And if you try to open a directory for reading, you get</span></p>
  <pre class="verbatim"><span class="calibre20">&gt;&gt;&gt; fin = open('/home')
IOError: [Errno 21] Is a directory
</span></pre>

  <p class="calibre15"><span class="calibre4">To avoid these errors, you could use functions like <tt class="calibre7">os.path.exists</tt> and <tt class="calibre7">os.path.isfile</tt>, but it would take a lot of time and code to check all the possibilities (if “<tt class="calibre7">Errno 21</tt>” is any indication, there are at least 21 things that can go wrong).</span></p>

  <p class="calibre15"><a class="calibre16" id="@default1275"></a> <a class="calibre16" id="@default1276"></a> <a class="calibre16" id="@default1277"></a></p>

  <p class="calibre15"><span class="calibre4">It is better to go ahead and try, and deal with problems if they happen, which is exactly what the <tt class="calibre7">try</tt> statement does. The syntax is similar to an <tt class="calibre7">if</tt> statement:</span></p>
  <pre class="verbatim"><span class="calibre20">try:    
    fin = open('bad_file')
    for line in fin:
        print line
    fin.close()
except:
    print 'Something went wrong.'
</span></pre>

  <p class="calibre15"><span class="calibre4">Python starts by executing the <tt class="calibre7">try</tt> clause. If all goes well, it skips the <tt class="calibre7">except</tt> clause and proceeds. If an exception occurs, it jumps out of the <tt class="calibre7">try</tt> clause and executes the <tt class="calibre7">except</tt> clause.</span></p>

  <p class="calibre15"><span class="calibre4">Handling an exception with a <tt class="calibre7">try</tt> statement is called <b class="calibre19">catching</b> an exception. In this example, the <tt class="calibre7">except</tt> clause prints an error message that is not very helpful. In general, catching an exception gives you a chance to fix the problem, or try again, or at least end the program gracefully.</span></p>
</body>
</html>
