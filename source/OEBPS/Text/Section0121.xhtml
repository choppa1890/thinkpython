<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="hevea 1.10" name="GENERATOR" />

  <title>Tuples</title>
  <link href="../Styles/stylesheet.css" rel="stylesheet" type="text/css" />
  <style type="text/css">
/*<![CDATA[*/

  @page { margin-bottom: 5.000000pt; margin-top: 5.000000pt; }

  span.sgc-1 {font-weight: bold}

  body.sgc-2 {word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;}
  /*]]>*/
  </style>
</head>

<body class="calibre sgc-2">
  <h2 class="section sigilNotInTOC" id="heading_id_5"><a class="calibre14" id="toc132"></a><a class="calibre14" id="htoc146"><span class="calibre18">12.3</span></a><span class="calibre18">&nbsp;&nbsp;Tuples as return values</span></h2>

  <p class="calibre15"><a class="calibre16" id="@default1059"></a> <a class="calibre16" id="@default1060"></a> <a class="calibre16" id="@default1061"></a> <a class="calibre16" id="@default1062"></a></p>

  <p class="calibre15"><span class="calibre4">Strictly speaking, a function can only return one value, but if the value is a tuple, the effect is the same as returning multiple values. For example, if you want to divide two integers and compute the quotient and remainder, it is inefficient to compute <tt class="calibre7">x/y</tt> and then <tt class="calibre7">x%y</tt>. It is better to compute them both at the same time.</span></p>

  <p class="calibre15"><a class="calibre16" id="@default1063"></a></p>

  <p class="calibre15"><span class="calibre4">The built-in function <tt class="calibre7">divmod</tt> takes two arguments and returns a tuple of two values, the quotient and remainder. You can store the result as a tuple:</span></p>
  <pre class="verbatim"><span class="calibre20">&gt;&gt;&gt; t = divmod(7, 3)
&gt;&gt;&gt; print t
(2, 1)
</span></pre>

  <p class="calibre15"><span class="calibre4">Or use tuple assignment to store the elements separately:</span></p>

  <p class="calibre15"><a class="calibre16" id="@default1064"></a> <a class="calibre16" id="@default1065"></a></p>
  <pre class="verbatim"><span class="calibre20">&gt;&gt;&gt; quot, rem = divmod(7, 3)
&gt;&gt;&gt; print quot
2
&gt;&gt;&gt; print rem
1
</span></pre>

  <p class="calibre15"><span class="calibre4">Here is an example of a function that returns a tuple:</span></p>
  <pre class="verbatim"><span class="calibre20">def min_max(t):
    return min(t), max(t)
</span></pre>

  <p class="calibre15"><span class="calibre4"><tt class="calibre7">max</tt> and <tt class="calibre7">min</tt> are built-in functions that find the largest and smallest elements of a sequence. <code class="calibre7">min_max</code> computes both and returns a tuple of two values.</span></p>
</body>
</html>
