<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="hevea 1.10" name="GENERATOR" />

  <title>The way of the program</title>
  <link href="../Styles/stylesheet.css" rel="stylesheet" type="text/css" />
  <style type="text/css">
/*<![CDATA[*/

  @page { margin-bottom: 5.000000pt; margin-top: 5.000000pt; }

  span.sgc-1 {font-weight: bold}

  body.sgc-2 {word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;}
  /*]]>*/
  </style>
</head>

<body class="calibre sgc-2">
  <h2 class="section sigilNotInTOC" id="heading_id_8"><a class="calibre14" id="toc9"></a><a class="calibre14" id="htoc12"><span class="calibre18">1.6</span></a><span class="calibre18">&nbsp;&nbsp;Debugging</span></h2>

  <p class="calibre15"><a class="calibre16" id="@default67"></a></p>

  <p class="calibre15"><span class="calibre4">It is a good idea to read this book in front of a computer so you can try out the examples as you go. You can run most of the examples in interactive mode, but if you put the code into a script, it is easier to try out variations.</span></p>

  <p class="calibre15"><span class="calibre4">Whenever you are experimenting with a new feature, you should try to make mistakes. For example, in the “Hello, world!” program, what happens if you leave out one of the quotation marks? What if you leave out both? What if you spell <tt class="calibre7">print</tt> wrong?</span></p>

  <p class="calibre15"><a class="calibre16" id="@default68"></a></p>

  <p class="calibre15"><span class="calibre4">This kind of experiment helps you remember what you read; it also helps with debugging, because you get to know what the error messages mean. It is better to make mistakes now and on purpose than later and accidentally.</span></p>

  <p class="calibre15"><span class="calibre4">Programming, and especially debugging, sometimes brings out strong emotions. If you are struggling with a difficult bug, you might feel angry, despondent or embarrassed.</span></p>

  <p class="calibre15"><span class="calibre4">There is evidence that people naturally respond to computers as if they were people</span><sup class="calibre10"><a class="calibre3" href="../Text/Section0010.xhtml#note3" id="text3"><span class="calibre4">3</span></a></sup><span class="calibre4">. When they work well, we think of them as teammates, and when they are obstinate or rude, we respond to them the same way we respond to rude, obstinate people.</span></p>

  <p class="calibre15"><a class="calibre16" id="@default69"></a> <a class="calibre16" id="@default70"></a></p>

  <p class="calibre15"><span class="calibre4">Preparing for these reactions might help you deal with them. One approach is to think of the computer as an employee with certain strengths, like speed and precision, and particular weaknesses, like lack of empathy and inability to grasp the big picture.</span></p>

  <p class="calibre15"><span class="calibre4">Your job is to be a good manager: find ways to take advantage of the strengths and mitigate the weaknesses. And find ways to use your emotions to engage with the problem, without letting your reactions interfere with your ability to work effectively.</span></p>

  <p class="calibre15"><span class="calibre4">Learning to debug can be frustrating, but it is a valuable skill that is useful for many activities beyond programming. At the end of each chapter there is a debugging section, like this one, with my thoughts about debugging. I hope they help!</span></p>
</body>
</html>
