<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="hevea 1.10" name="GENERATOR" />

  <title>Case study: word play</title>
  <link href="../Styles/stylesheet.css" rel="stylesheet" type="text/css" />
  <style type="text/css">
/*<![CDATA[*/

  @page { margin-bottom: 5.000000pt; margin-top: 5.000000pt; }

  span.sgc-1 {font-weight: bold}

  body.sgc-2 {word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;}
  /*]]>*/
  </style>
</head>

<body class="calibre sgc-2">
  <h2 class="section sigilNotInTOC" id="heading_id_4"><a class="calibre14" id="toc99"></a><a class="calibre14" id="htoc110"><span class="calibre18">9.2</span></a><span class="calibre18">&nbsp;&nbsp;Exercises</span></h2>

  <p class="calibre15"><span class="calibre4">There are solutions to these exercises in the next section. You should at least attempt each one before you read the solutions.</span></p>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;2</b>&nbsp;&nbsp; <em class="calibre9">In 1939 Ernest Vincent Wright published a 50,000 word novel called</em> Gadsby <em class="calibre9">that does not contain the letter “e.” Since “e” is the most common letter in English, that’s not easy to do.</em></span>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">In fact, it is difficult to construct a solitary thought without using that most common symbol. It is slow going at first, but with caution and hours of training you can gradually gain facility.</em></span></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">All right, I’ll stop now.</em></span></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">Write a function called <code class="calibre7">has_no_e</code> that returns <tt class="calibre7">True</tt> if the given word doesn’t have the letter “e” in it.</em></span></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">Modify your program from the previous section to print only the words that have no “e” and compute the percentage of the words in the list have no “e.”</em></span></p>

    <p class="calibre15"><a class="calibre16" id="@default684"></a></p>
  </div>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;3</b>&nbsp;&nbsp; <em class="calibre9">Write a function named <tt class="calibre7">avoids</tt> that takes a word and a string of forbidden letters, and that returns <tt class="calibre7">True</tt> if the word doesn’t use any of the forbidden letters.</em></span>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">Modify your program to prompt the user to enter a string of forbidden letters and then print the number of words that don’t contain any of them. Can you find a combination of 5 forbidden letters that excludes the smallest number of words?</em></span></p>
  </div>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;4</b>&nbsp;&nbsp; <em class="calibre9">Write a function named <code class="calibre7">uses_only</code> that takes a word and a string of letters, and that returns <tt class="calibre7">True</tt> if the word contains only letters in the list. Can you make a sentence using only the letters <tt class="calibre7">acefhlo</tt>? Other than “Hoe alfalfa?”</em></span>
  </div>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;5</b>&nbsp;&nbsp; <em class="calibre9">Write a function named <code class="calibre7">uses_all</code> that takes a word and a string of required letters, and that returns <tt class="calibre7">True</tt> if the word uses all the required letters at least once. How many words are there that use all the vowels <tt class="calibre7">aeiou</tt>? How about <tt class="calibre7">aeiouy</tt>?</em></span>
  </div>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;6</b>&nbsp;&nbsp; <em class="calibre9">Write a function called <code class="calibre7">is_abecedarian</code> that returns <tt class="calibre7">True</tt> if the letters in a word appear in alphabetical order (double letters are ok). How many abecedarian words are there?</em></span>
  </div>
</body>
</html>
