<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="hevea 1.10" name="GENERATOR" />

  <title>Strings</title>
  <link href="../Styles/stylesheet.css" rel="stylesheet" type="text/css" />
  <style type="text/css">
/*<![CDATA[*/

  @page { margin-bottom: 5.000000pt; margin-top: 5.000000pt; }

  span.sgc-1 {font-weight: bold}
  /*]]>*/
  </style>
</head>

<body class="calibre">
  <h2 class="section sigilNotInTOC" id="heading_id_15"><a class="calibre14" id="toc97"></a><a class="calibre14" id="htoc107"><span class="calibre18">8.13</span></a><span class="calibre18">&nbsp;&nbsp;Exercises</span></h2>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;9</b>&nbsp;&nbsp;</span>

    <p class="calibre15"><a class="calibre16" id="@default661"></a> <a class="calibre16" id="@default662"></a> <a class="calibre16" id="@default663"></a></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">A string slice can take a third index that specifies the “step size;” that is, the number of spaces between successive characters. A step size of 2 means every other character; 3 means every third, etc.</em></span></p>
    <pre class="verbatim"><span class="calibre20"><em class="calibre9">&gt;&gt;&gt; fruit = 'banana'
&gt;&gt;&gt; fruit[0:5:2]
'bnn'
</em></span></pre>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">A step size of -1 goes through the word backwards, so the slice <code class="calibre7">[::-1]</code> generates a reversed string.</em></span></p>

    <p class="calibre15"><a class="calibre16" id="@default664"></a></p>

    <p class="calibre15"><em class="calibre9"><span class="calibre4">Use this idiom to write a one-line version of <code class="calibre7">is_palindrome</code> from Exercise&nbsp;</span><a class="calibre3" href="../Text/Section0069.xhtml#palindrome"><span class="calibre4">6.6</span></a><span class="calibre4">.</span></em></p>
  </div>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;10</b>&nbsp;&nbsp;</span> <a class="calibre16" id="@default665"></a> <a class="calibre16" id="@default666"></a>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">Read the documentation of the string methods at <tt class="calibre7">docs.python.org/lib/string-methods.html</tt>. You might want to experiment with some of them to make sure you understand how they work. <tt class="calibre7">strip</tt> and <tt class="calibre7">replace</tt> are particularly useful.</em></span></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">The documentation uses a syntax that might be confusing. For example, in <code class="calibre7">find(sub[, start[, end]])</code>, the brackets indicate optional arguments. So <tt class="calibre7">sub</tt> is required, but <tt class="calibre7">start</tt> is optional, and if you include <tt class="calibre7">start</tt>, then <tt class="calibre7">end</tt> is optional.</em></span></p>
  </div>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;11</b>&nbsp;&nbsp; <em class="calibre9">The following functions are all</em> intended <em class="calibre9">to check whether a string contains any lowercase letters, but at least some of them are wrong. For each function, describe what the function actually does (assuming that the parameter is a string).</em></span>
    <pre class="verbatim"><span class="calibre20"><em class="calibre9">def any_lowercase1(s):
    for c in s:
        if c.islower():
            return True
        else:
            return False

def any_lowercase2(s):
    for c in s:
        if 'c'.islower():
            return 'True'
        else:
            return 'False'

def any_lowercase3(s):
    for c in s:
        flag = c.islower()
    return flag

def any_lowercase4(s):
    flag = False
    for c in s:
        flag = flag or c.islower()
    return flag

def any_lowercase5(s):
    for c in s:
        if not c.islower():
            return False
    return True
</em></span></pre>
  </div>

  <div class="theorem">
    <span class="calibre4"><b class="calibre19">Exercise&nbsp;12</b>&nbsp;&nbsp;</span> <a class="calibre16" id="@default667"></a> <a class="calibre16" id="@default668"></a>

    <p class="calibre15"><a class="calibre16" id="exrotate"></a> <em class="calibre9"><span class="calibre4">ROT13 is a weak form of encryption that involves “rotating” each letter in a word by 13 places</span><sup class="calibre10"><a class="calibre3" href="#note17" id="text17"><span class="calibre4">1</span></a></sup><span class="calibre4">. To rotate a letter means to shift it through the alphabet, wrapping around to the beginning if necessary, so ’A’ shifted by 3 is ’D’ and ’Z’ shifted by 1 is ’A’.</span></em></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">Write a function called <code class="calibre7">rotate_word</code> that takes a string and an integer as parameters, and that returns a new string that contains the letters from the original string “rotated” by the given amount.</em></span></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">For example, “cheer” rotated by 7 is “jolly” and “melon” rotated by -10 is “cubed”.</em></span></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">You might want to use the built-in functions <tt class="calibre7">ord</tt>, which converts a character to a numeric code, and <tt class="calibre7">chr</tt>, which converts numeric codes to characters.</em></span></p>

    <p class="calibre15"><span class="calibre4"><em class="calibre9">Potentially offensive jokes on the Internet are sometimes encoded in ROT13. If you are not easily offended, find and decode some of them.</em></span></p>
  </div>
  <hr class="footnoterule" />

  <dl class="thefootnotes">
    <dt class="dt-description"><a class="calibre3" href="#text17" id="note17"><span class="calibre4">1</span></a></dt>

    <dd class="dd-thefootnotes"><span class="calibre4">See <tt class="calibre7">wikipedia.org/wiki/ROT13</tt>.</span></dd>
  </dl>
</body>
</html>
