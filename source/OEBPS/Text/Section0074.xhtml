<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="hevea 1.10" name="GENERATOR" />

  <title>Iteration</title>
  <link href="../Styles/stylesheet.css" rel="stylesheet" type="text/css" />
  <style type="text/css">
/*<![CDATA[*/

  @page { margin-bottom: 5.000000pt; margin-top: 5.000000pt; }

  span.sgc-1 {font-weight: bold}

  body.sgc-2 {word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;}
  /*]]>*/
  </style>
</head>

<body class="calibre sgc-2">
  <div class="theorem"></div>

  <h2 class="section sigilNotInTOC" id="heading_id_8"><a class="calibre14" id="toc81"></a><a class="calibre14" id="htoc90"><span class="calibre18">7.6</span></a><span class="calibre18">&nbsp;&nbsp;Algorithms</span></h2>

  <p class="calibre15"><a class="calibre16" id="@default549"></a></p>

  <p class="calibre15"><span class="calibre4">Newton’s method is an example of an <b class="calibre19">algorithm</b>: it is a mechanical process for solving a category of problems (in this case, computing square roots).</span></p>

  <p class="calibre15"><span class="calibre4">It is not easy to define an algorithm. It might help to start with something that is not an algorithm. When you learned to multiply single-digit numbers, you probably memorized the multiplication table. In effect, you memorized 100 specific solutions. That kind of knowledge is not algorithmic.</span></p>

  <p class="calibre15"><span class="calibre4">But if you were “lazy,” you probably cheated by learning a few tricks. For example, to find the product of <i class="calibre9">n</i> and 9, you can write <i class="calibre9">n</i>−1 as the first digit and 10−<i class="calibre9">n</i> as the second digit. This trick is a general solution for multiplying any single-digit number by 9. That’s an algorithm!</span></p>

  <p class="calibre15"><a class="calibre16" id="@default550"></a> <a class="calibre16" id="@default551"></a> <a class="calibre16" id="@default552"></a> <a class="calibre16" id="@default553"></a></p>

  <p class="calibre15"><span class="calibre4">Similarly, the techniques you learned for addition with carrying, subtraction with borrowing, and long division are all algorithms. One of the characteristics of algorithms is that they do not require any intelligence to carry out. They are mechanical processes in which each step follows from the last according to a simple set of rules.</span></p>

  <p class="calibre15"><span class="calibre4">In my opinion, it is embarrassing that humans spend so much time in school learning to execute algorithms that, quite literally, require no intelligence.</span></p>

  <p class="calibre15"><span class="calibre4">On the other hand, the process of designing algorithms is interesting, intellectually challenging, and a central part of what we call programming.</span></p>

  <p class="calibre15"><span class="calibre4">Some of the things that people do naturally, without difficulty or conscious thought, are the hardest to express algorithmically. Understanding natural language is a good example. We all do it, but so far no one has been able to explain <em class="calibre9">how</em> we do it, at least not in the form of an algorithm.</span></p>
</body>
</html>
