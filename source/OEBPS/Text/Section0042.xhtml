<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="hevea 1.10" name="GENERATOR" />

  <title>Case study: interface design</title>
  <link href="../Styles/stylesheet.css" rel="stylesheet" type="text/css" />
  <style type="text/css">
/*<![CDATA[*/

  @page { margin-bottom: 5.000000pt; margin-top: 5.000000pt; }

  span.sgc-1 {font-weight: bold}

  body.sgc-2 {word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;}
  /*]]>*/
  </style>
</head>

<body class="calibre sgc-2">
  <h2 class="section sigilNotInTOC" id="heading_id_10"><a class="calibre14" id="toc46"></a><a class="calibre14" id="htoc52"><span class="calibre18">4.8</span></a><span class="calibre18">&nbsp;&nbsp;A development plan</span></h2>

  <p class="calibre15"><a class="calibre16" id="@default314"></a></p>

  <p class="calibre15"><span class="calibre4">A <b class="calibre19">development plan</b> is a process for writing programs. The process we used in this case study is “encapsulation and generalization.” The steps of this process are:</span></p>

  <ol class="enumerate" type="1">
    <li class="li-itemize"><span class="calibre4">Start by writing a small program with no function definitions.</span></li>

    <li class="li-itemize"><span class="calibre4">Once you get the program working, encapsulate it in a function and give it a name.</span></li>

    <li class="li-itemize"><span class="calibre4">Generalize the function by adding appropriate parameters.</span></li>

    <li class="li-itemize"><span class="calibre4">Repeat steps 1&ndash;3 until you have a set of working functions. Copy and paste working code to avoid retyping (and re-debugging).</span></li>

    <li class="li-itemize"><span class="calibre4">Look for opportunities to improve the program by refactoring. For example, if you have similar code in several places, consider factoring it into an appropriately general function.</span></li>
  </ol>

  <p class="calibre15"><span class="calibre4">This process has some drawbacks&mdash;we will see alternatives later&mdash;but it can be useful if you don’t know ahead of time how to divide the program into functions. This approach lets you design as you go along.</span></p>
</body>
</html>
